# create a CI/CD variable named KUBECONFIG (as file)
# add the content of /etc/rancher/k3s/k3s.yaml to KUBECONFIG
# create a CI/CD variable named CLUSTER_IP (value is the IP of the kube cluster)
stages:
  - üê≥build
  - üö¢deploy

variables:
  REGISTRY: "little-registry.test:5000"
  DOCKER_USER: "little-registry.test:5000"

#----------------------------
# Build Docker image
#----------------------------
üì¶kaniko-build:
  image:
    name: ${REGISTRY}/gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: üê≥build
  script: |
    IMAGE_NAME="${CI_PROJECT_NAME}-img"
    TAG="${CI_COMMIT_SHORT_SHA}"
    DOCKER_USER="${DOCKER_USER}"
    IMAGE="${DOCKER_USER}/${IMAGE_NAME}:${TAG}"

    echo '{"auths":{"${REGISTRY}":{"username":"","password":""}}}'  > /kaniko/.docker/config.json
    cat /kaniko/.docker/config.json
    
    /kaniko/executor \
    --context $CI_PROJECT_DIR \
    --dockerfile $CI_PROJECT_DIR/Dockerfile \
    --destination ${IMAGE} \
    --insecure --skip-tls-verify --insecure-pull
   
#----------------------------
# Deploy
#----------------------------
#----------------------------
# YAML Anchors
#----------------------------
.environment-variables: &environment-variables
- |
  export CONTAINER_PORT=${CONTAINER_PORT:-8080}
  export EXPOSED_PORT=${EXPOSED_PORT:-80}
  export APPLICATION_NAME=${CI_PROJECT_NAME}
  # üñêÔ∏è KUBE_NAMESPACE is automatically generated by GitLab
  export NAMESPACE=${KUBE_NAMESPACE} 
  export TAG=${CI_COMMIT_SHORT_SHA}
  export IMAGE_NAME="${CI_PROJECT_NAME}-img"
  export DOCKER_USER="${DOCKER_USER}"
  export IMAGE=${DOCKER_USER}/${IMAGE_NAME}:${TAG}
  export CLUSTER_IP="${CLUSTER_IP}"
  export BRANCH=${CI_COMMIT_REF_SLUG}
  export HOST="${APPLICATION_NAME}.${BRANCH}.${CLUSTER_IP}.nip.io"

.environment-variables-substitution: &environment-variables-substitution
- |
  envsubst < ./kube/deploy.template.yaml > ./kube/deploy.${TAG}.yaml
  cat ./kube/deploy.${TAG}.yaml

.kubectl-apply: &kubectl-apply
- |
  kubectl apply -f ./kube/deploy.${TAG}.yaml -n ${NAMESPACE}

.kubectl-scale-by-3: &kubectl-scale-by-3
- |
  kubectl scale --replicas=3 deploy ${APPLICATION_NAME} -n ${NAMESPACE}

.display-information: &display-information
- |
  echo "üåç http://${HOST}"
  kubectl get pods --namespace ${KUBE_NAMESPACE}


üöÄproduction-deploy:
  stage: üö¢deploy
  image: ${REGISTRY}/k33g/k3g.utilities:1.0.0
  only:
    - master    
  environment:
    name: production/${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}
    url: http://${CI_PROJECT_NAME}.${CI_COMMIT_REF_SLUG}.${CLUSTER_IP}.nip.io
  script:
    - *environment-variables
    - *environment-variables-substitution
    - *kubectl-apply
    - *kubectl-scale-by-3
    - *display-information

üéâpreview-deploy:
  stage: üö¢deploy
  image: ${REGISTRY}/k33g/k3g.utilities:1.0.0
  only:
    - branches
  except:
    - master   
  environment:
    name: preview/${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}
    url: http://${CI_PROJECT_NAME}.${CI_COMMIT_REF_SLUG}.${CLUSTER_IP}.nip.io
    on_stop: üò¢stop-preview-deploy
  script:
    - *environment-variables
    - *environment-variables-substitution
    - *kubectl-apply
    - *display-information

üò¢stop-preview-deploy:
  stage: üö¢deploy
  image: ${REGISTRY}/k33g/k3g.utilities:1.0.0
  only:
    - branches
  except:
    - master     
  when: manual    
  environment:
    name: preview/${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}
    action: stop
  script:
    #- kubectl delete deploy,service,ingress ${CI_PROJECT_NAME} --namespace=${KUBE_NAMESPACE}
    - kubectl delete namespace ${KUBE_NAMESPACE}